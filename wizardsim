getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Player = game:GetService("Players").LocalPlayer
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local AutoFarmToggle = false
local AutoQuestToggle = false
local AutoFarmEnemyOptions = {
    ["Dummy"] = "[1] Training Dummy",
    ["DummyWarrior"] = "[3] Dummy Warrior",
    -- Add more enemies as needed
}
local AutoFarmEnemies = {"Dummy"} -- Add or change enemies as needed
local SpellState = 1
local QuestToAuto = "CJ:4"

-- Rayfield Window
local Window = Rayfield:CreateWindow({
    Name = "AutoFarm GUI",
    LoadingTitle = "Loading",
    LoadingSubtitle = "by SPDM",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "AutoFarmGUI",
        FileName = "config"
    }
})

-- Auto Farm Tab
local AutoFarmTab = Window:CreateTab("Auto Farm")

local AutoFarmToggle1 = AutoFarmTab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = false,
    Callback = function(Value)
        AutoFarmToggle = Value
    end,
})

local AutoFarmDropdown = AutoFarmTab:CreateDropdown({
    Name = "Select Enemy",
    Options = {"[1] Training Dummy", "[3] Dummy Warrior"},
    CurrentOption = "[1] Training Dummy",
    Callback = function(Option)
        AutoFarmEnemies = {Option}
    end,
})

-- Auto Quest Tab
local QuestTab = Window:CreateTab("Auto Quest")

local AutoQuestToggle1 = QuestTab:CreateToggle({
    Name = "Auto Quest",
    CurrentValue = false,
    Callback = function(Value)
        AutoQuestToggle = Value
    end,
})

local QuestDropdown = QuestTab:CreateDropdown({
    Name = "Select Quest",
    Options = {"CJ:4"}, -- Add more quests as needed
    CurrentOption = "CJ:4",
    Callback = function(Option)
        QuestToAuto = Option
    end,
})

-- Farming Functionality
spawn(function()
    while wait(2) do
        if AutoFarmToggle then
            for _, enemyName in pairs(AutoFarmEnemies) do
                local enemies = Workspace:FindFirstChild("Enemies")
                if enemies then
                    for _, enemy in pairs(enemies:GetChildren()) do
                        if enemy.Name == enemyName then
                            ReplicatedStorage.Remote.CastSpell:FireServer(SpellState, enemy)
                            SpellState = SpellState == 1 and 2 or 1
                        end
                    end
                end
            end
        end
    end
end)

-- Auto Quest Functionality
spawn(function()
    while wait(1) do
        if AutoQuestToggle then
            ReplicatedStorage.Remote.AcceptQuest:FireServer(QuestToAuto)
        end
    end
end)
