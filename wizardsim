const fs = require('fs');
const path = require('path');
const axios = require('axios');

/**
 * Function to copy a Roblox game and create a download file.
 *
 * @param {string} gameId - The ID of the Roblox game to copy.
 * @param {string} downloadPath - The path where the download file should be saved.
 * @returns {Promise<void>} A Promise that resolves when the download file is created.
 */
async function copyRobloxGame(gameId, downloadPath) {
    try {
        // Step 1: Fetch the game details from the Roblox API
        const gameResponse = await axios.get(`https://api.roblox.com/games/${gameId}`);
        const gameData = gameResponse.data;

        // Step 2: Create the download directory if it doesn't exist
        if (!fs.existsSync(downloadPath)) {
            fs.mkdirSync(downloadPath, { recursive: true });
        }

        // Step 3: Download and save the game scripts
        const scriptsResponse = await axios.get(`https://api.roblox.com/games/${gameId}/scripts`);
        const scriptsData = scriptsResponse.data;
        scriptsData.forEach((script) => {
            const scriptPath = path.join(downloadPath, `${script.Name}.lua`);
            fs.writeFileSync(scriptPath, script.Source);
        });

        // Step 4: Download and save the game models
        const modelsResponse = await axios.get(`https://api.roblox.com/games/${gameId}/models`);
        const modelsData = modelsResponse.data;
        modelsData.forEach((model) => {
            const modelPath = path.join(downloadPath, `${model.Name}.rbxm`);
            const modelResponse = await axios.get(model.AssetUrl, { responseType: 'arraybuffer' });
            fs.writeFileSync(modelPath, modelResponse.data);
        });

        // Step 5: Create the download file
        const downloadFilePath = path.join(downloadPath, `${gameData.Name}.rbxl`);
        const downloadFileContent = `Roblox game download file: ${gameData.Name}\n\nScripts:\n${scriptsData.map((script) => script.Name).join('\n')}\n\nModels:\n${modelsData.map((model) => model.Name).join('\n')}`;
        fs.writeFileSync(downloadFilePath, downloadFileContent);

        console.log(`Roblox game ${gameData.Name} copied successfully. Download file created at ${downloadFilePath}`);
    } catch (error) {
        console.error('An error occurred while copying the Roblox game:', error.message);
    }
}

// Usage Example
const gameId = '1234567890'; // Replace with the ID of the Roblox game you want to copy
const downloadPath = './downloads'; // Replace with the desired download path
copyRobloxGame(gameId, downloadPath);
